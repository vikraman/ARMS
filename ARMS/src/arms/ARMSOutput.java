/*
 * Automatic Routine Management System
 */

/*
 * ARMSOutput.java
 *
 * Created on Mar 16, 2010, 1:15:00 AM
 */
package arms;

/**
 *
 * @author vh4x0r
 */
public class ARMSOutput extends javax.swing.JFrame {

    /** Creates new form ARMSOutput */
    public ARMSOutput(ARMSSolution solution, int EXIT_ACTION) {
        this.solution = solution;
        initComponents();
        this.setDefaultCloseOperation(EXIT_ACTION);
    }

    @Override
    public void dispose() {
        ARMSApp.getApplication().getMainFrame().setVisible(true);
        super.dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outputTabbedPane = new javax.swing.JTabbedPane();
        subjectPanel = new javax.swing.JPanel();
        subSubScrollPane = new javax.swing.JScrollPane();
        subSubList = new javax.swing.JList();
        teacherSubLabel = new javax.swing.JLabel();
        subjectSubLabel = new javax.swing.JLabel();
        teacherSubScrollPane = new javax.swing.JScrollPane();
        teacherSubEditorPane = new javax.swing.JEditorPane();
        teacherPanel = new javax.swing.JPanel();
        teacherTeacherScrollPane = new javax.swing.JScrollPane();
        teacherTeacherList = new javax.swing.JList();
        subTeacherLabel = new javax.swing.JLabel();
        teacherTeacherLabel = new javax.swing.JLabel();
        subTeacherScrollPane = new javax.swing.JScrollPane();
        subTeacherEditorPane = new javax.swing.JEditorPane();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(arms.ARMSApp.class).getContext().getResourceMap(ARMSOutput.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N

        outputTabbedPane.setName("outputTabbedPane"); // NOI18N

        subjectPanel.setName("subjectPanel"); // NOI18N

        subSubScrollPane.setName("subSubScrollPane"); // NOI18N

        subSubList.setModel(new javax.swing.AbstractListModel() {
            Object[] strings = ARMSManager.getSubjects().toArray();
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        subSubList.setName("subSubList"); // NOI18N
        subSubList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                subSubListValueChanged(evt);
            }
        });
        subSubScrollPane.setViewportView(subSubList);

        teacherSubLabel.setText(resourceMap.getString("teacherSubLabel.text")); // NOI18N
        teacherSubLabel.setName("teacherSubLabel"); // NOI18N

        subjectSubLabel.setText(resourceMap.getString("subjectSubLabel.text")); // NOI18N
        subjectSubLabel.setName("subjectSubLabel"); // NOI18N

        teacherSubScrollPane.setName("teacherSubScrollPane"); // NOI18N

        teacherSubEditorPane.setEditable(false);
        teacherSubEditorPane.setName("teacherSubEditorPane"); // NOI18N
        teacherSubEditorPane.setContentType("text/html");
        teacherSubScrollPane.setViewportView(teacherSubEditorPane);

        javax.swing.GroupLayout subjectPanelLayout = new javax.swing.GroupLayout(subjectPanel);
        subjectPanel.setLayout(subjectPanelLayout);
        subjectPanelLayout.setHorizontalGroup(
            subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
            .addGroup(subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(subjectPanelLayout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addGroup(subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(subjectSubLabel)
                        .addComponent(subSubScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(teacherSubLabel)
                        .addComponent(teacherSubScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        subjectPanelLayout.setVerticalGroup(
            subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
            .addGroup(subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subjectPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(subjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, subjectPanelLayout.createSequentialGroup()
                            .addGap(98, 98, 98)
                            .addComponent(teacherSubLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(teacherSubScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, subjectPanelLayout.createSequentialGroup()
                            .addComponent(subjectSubLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(subSubScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)))
                    .addContainerGap()))
        );

        outputTabbedPane.addTab(resourceMap.getString("subjectPanel.TabConstraints.tabTitle"), subjectPanel); // NOI18N

        teacherPanel.setName("teacherPanel"); // NOI18N

        teacherTeacherScrollPane.setName("teacherTeacherScrollPane"); // NOI18N

        teacherTeacherList.setModel(new javax.swing.AbstractListModel() {
            Object[] strings = ARMSManager.getTeachers().toArray();
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        teacherTeacherList.setName("teacherTeacherList"); // NOI18N
        teacherTeacherList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                teacherTeacherListValueChanged(evt);
            }
        });
        teacherTeacherScrollPane.setViewportView(teacherTeacherList);

        subTeacherLabel.setText(resourceMap.getString("subTeacherLabel.text")); // NOI18N
        subTeacherLabel.setName("subTeacherLabel"); // NOI18N

        teacherTeacherLabel.setText(resourceMap.getString("teacherTeacherLabel.text")); // NOI18N
        teacherTeacherLabel.setName("teacherTeacherLabel"); // NOI18N

        subTeacherScrollPane.setName("subTeacherScrollPane"); // NOI18N

        subTeacherEditorPane.setEditable(false);
        subTeacherEditorPane.setName("subTeacherEditorPane"); // NOI18N
        teacherSubEditorPane.setContentType("text/html");
        subTeacherScrollPane.setViewportView(subTeacherEditorPane);

        javax.swing.GroupLayout teacherPanelLayout = new javax.swing.GroupLayout(teacherPanel);
        teacherPanel.setLayout(teacherPanelLayout);
        teacherPanelLayout.setHorizontalGroup(
            teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
            .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(teacherPanelLayout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(teacherTeacherLabel)
                        .addComponent(teacherTeacherScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(subTeacherLabel)
                        .addComponent(subTeacherScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        teacherPanelLayout.setVerticalGroup(
            teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
            .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teacherPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, teacherPanelLayout.createSequentialGroup()
                            .addGap(98, 98, 98)
                            .addComponent(subTeacherLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(subTeacherScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, teacherPanelLayout.createSequentialGroup()
                            .addComponent(teacherTeacherLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(teacherTeacherScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)))
                    .addContainerGap()))
        );

        outputTabbedPane.addTab(resourceMap.getString("teacherPanel.TabConstraints.tabTitle"), teacherPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subSubListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_subSubListValueChanged
        // TODO add your handling code here:
        if (subSubList.isSelectionEmpty()) {
            return;
        }
        String text;
        if (solution.getTeacherIndex()[subSubList.getSelectedIndex()] == -1) {
            text = "<color=ff0000><i>Teacher not allocated !</i>";
        } else {
            Teacher t = ARMSManager.getTeachers().get(solution.getTeacherIndex()[subSubList.getSelectedIndex()]);
            text = "<strong>Name:<i> " + t.getName() + "</i><br>ID: " + t.getId() + "</strong>";
        }
        teacherSubEditorPane.setContentType("text/html");
        teacherSubEditorPane.setText(text);
    }//GEN-LAST:event_subSubListValueChanged

    private void teacherTeacherListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_teacherTeacherListValueChanged
        // TODO add your handling code here:
        if (teacherTeacherList.isSelectionEmpty()) {
            return;
        }
        String text = "";
        int count = 1;
        for (int i : solution.getSubjects(teacherTeacherList.getSelectedIndex())) {
            text += "<strong>" + count + ":</strong> <i>" + ARMSManager.getSubjects().get(i).getName() + "</i><br>";
            count++;
        }
        if (text.isEmpty()) {
            text = "<color=ff0000><i>No subjects allocated !</i>";
        }
        subTeacherEditorPane.setContentType("text/html");
        subTeacherEditorPane.setText(text);
    }//GEN-LAST:event_teacherTeacherListValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane outputTabbedPane;
    private javax.swing.JList subSubList;
    private javax.swing.JScrollPane subSubScrollPane;
    private javax.swing.JEditorPane subTeacherEditorPane;
    private javax.swing.JLabel subTeacherLabel;
    private javax.swing.JScrollPane subTeacherScrollPane;
    private javax.swing.JPanel subjectPanel;
    private javax.swing.JLabel subjectSubLabel;
    private javax.swing.JPanel teacherPanel;
    private javax.swing.JEditorPane teacherSubEditorPane;
    private javax.swing.JLabel teacherSubLabel;
    private javax.swing.JScrollPane teacherSubScrollPane;
    private javax.swing.JLabel teacherTeacherLabel;
    private javax.swing.JList teacherTeacherList;
    private javax.swing.JScrollPane teacherTeacherScrollPane;
    // End of variables declaration//GEN-END:variables
    private ARMSSolution solution;
}
